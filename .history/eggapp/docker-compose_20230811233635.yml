
# version: '3'
# services:
#   web:
#     build: .
#     command: npm run dev
#     # restart: always
#     # deploy:
#     #   replicas: 2
#     ports:
#       - "7001:7001"
#     # links:
#     #   - redis
#     #   - mongodb

#   # mongodb:
#   #   container_name: myapp-mongo
#   #   image: 'mongo:4'
#   #   ports:
#   #     - 27017:27017
#   #   environment:
#   #     # 初始化 mongodb 的账户，这个账户会创建在 admin 下，就是超管权限
#   #     MONGO_INITDB_ROOT_USERNAME: root
#   #     MONGO_INITDB_ROOT_PASSWORD: root
#   #     MONGO_INITDB_DATABASE: momo

#   # redis:
#   #   container_name: myapp-redis
#   #   image: 'redis:4.0.11'
#   #   ports:
#   #     - 6379:6379
#   cache:
#     image: redis:6.2-alpine
#     restart: always
#     ports:
#       - '6379:6379'
#     command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
#     volumes:
#       - cache:/data


version: '3.8'
services:
  db:
    image: mongodb
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
  api:
    container_name: quotes-api
    build:
      context: ./
      target: production
    image: quotes-api
    depends_on:
      - db
      - cache
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    links:
      - db
      - cache
    volumes:
      - ./:/src
volumes:
  db:
    driver: local
  cache:
    driver: local
